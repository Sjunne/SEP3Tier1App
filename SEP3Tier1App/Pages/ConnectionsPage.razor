@page "/Connections"
@using WebApplication.Data
@using WebApplication.Network
@using SEP3Tier1App.Network
@using System.Text.Json
@inject INetworkComp Network;


<h3>Connections</h3>


<div class="container" style="width: 100%">
    <div class="top">
        <h2>Connections</h2>
    </div>
    <div class="row" style="width: 100%">

        <div class="shadow" style="width: 100%">
            @for (int i = 0; i < allConnections.Count; i++)
            {
                int holder = i;
                <div class="col-sm-12">
                    <div class="col-sm-2" style="float: left">
                        <img src="@Images[holder]" class="img-circle" width="60px">
                    </div>
                    <div class="col-sm-8" style="float: left">
                        <h4>
                            <a href="#">@allConnections[holder].Username</a>
                        </h4>
                        <p>
                            <a >@allConnections[holder].connectionAge</a>
                        </p>
                    </div>
                    <div class="col-sm-2" style="float: left">
                        <br>
                        <a href="#" class="myButton">chat</a>
                    </div>
                </div>
                <div class="clearfix"></div>
                <hr/>
            }

        </div>
    </div>
</div>

<!--
@for (int i = 0; i < allConnections.Count; i++)
{
    int holder = i;
    <div style="height: 100px; border-width: 1px; margin-left: 10px; margin-right: 30px;" class="container">
        <div class="row" style="height: 100%">
            <div style="height: 100%" class="col-md-2">
                <img src="@Images[holder]" alt="@allConnections[holder].Username" style="object-fit: fill; border-radius: 50%; width: 100%; height: 70%;"/>

            </div>


            <div class="col-md-6">
                <p style="margin-left: 25%;">@allConnections[holder].Username</p>

            </div>


            <div class="col-md-2">
                <p style="float: right;">@allConnections[holder].connectionAge</p>
            </div>

            <div class="col-md-2">
                <button>Chat</button>
            </div>
        </div>


    </div>
}
-->


@code {
    private IList<Connections> allConnections = new List<Connections>();
    private IList<string> Images = new List<string>();
    private string Username;
    private Delegating _delegate;

    private bool onceOnly;


    protected override Task OnInitializedAsync()
    {
        if (onceOnly == false)
        {
            setDelegates();
        }
        return base.OnInitializedAsync();
    }

    private async void ReactToNetwork(Request obj)
    {
        Console.WriteLine(obj.o.ToString());
        allConnections = JsonSerializer.Deserialize<IList<Connections>>(obj.o.ToString());
        Console.WriteLine(allConnections.Count);
    }

    private async void setDelegates()
    {
        onceOnly = true;
        _delegate = Network.getDelegating();
        _delegate.fromNetwork = ReactToNetwork;
        _delegate.ImagesFromNetwork = ReactToNetWorkSetImages;

        await Network.getConnections(Username);
    }

    private async void ReactToNetWorkSetImages(IList<string> obj)
    {
        Images = obj;
        Console.WriteLine(Images.Count);
        await InvokeAsync(StateHasChanged);
    }

}