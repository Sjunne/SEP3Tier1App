@page "/Connec"
@using WebApplication.Data
@using WebApplication.Network
@inject INetworkComp Network;


<h3>Connections</h3>
<!--
@for (int i = 0; i < allConnections.Count; i++)
{
    int holder = i;
    <div style="height: 100px; border-width: 1px; margin-left: 10px; margin-right: 30px;" class="container">
        <div class="row" style="height: 100%">
            <div style="height: 100%" class="col-md-2">
                <img src="@Images[holder]" alt="@allConnections[holder].Username" style="object-fit: fill; border-radius: 50%; width: 100%; height: 70%;"/>

            </div>


            <div class="col-md-6">
                <p style="margin-left: 25%;">@allConnections[holder].Username</p>

            </div>


            <div class="col-md-2">
                <p style="float: right;">@allConnections[holder]</p>
            </div>

            <div class="col-md-2">
                <button>Chat</button>
            </div>
        </div>


    </div>
}

-->

@code {
    private IList<Connections> allConnections = new List<Connections>();
    private IList<string> Images = new List<string>();
    private string Username;
   // private Delegating _delegate;

    private bool onceOnly;


    protected override Task OnInitializedAsync()
    {
        if (onceOnly == false)
        {
           // setDelegates();
        }
        return base.OnInitializedAsync();
    }

    private void ReactToNetwork(Request obj)
    {
        Console.WriteLine(obj.o.ToString());
    }

  /*  private async void setDelegates()
    {
        onceOnly = true;
        Console.WriteLine("tester1233123");
        _delegate = Network.getDelegating();
        _delegate.fromNetwork += ReactToNetwork;
       
        
        await Network.getConnections(Username);
    }*/

}