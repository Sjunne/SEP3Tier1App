@using WebApplication.Data
@using WebApplication.Network
@using SEP3Tier1App.Authentication
@inject CustomAuthenticationStateProvider CustomAuthenticationStateProvider;
@inject INetworkComp NetworkComp;
@inject NavigationManager NavigationManager
@inject ProfileData ProfileData
<h3>Login</h3>
<div>
    <RadzenCard>
        <RadzenLogin Login=@(args => OnLogin(args, "")) 
                     ResetPassword=@(args => OnResetPassword(args, ""))
                     Register=@(args => OnRegister("")) Style="margin-bottom: 20px;" />
    </RadzenCard>
</div>

<p>@Update</p>
@code {
    private User User = new User();
    private string Update;

    private async void OnLogin(LoginArgs args, string loginWithRegisterAndPasswordReset)
    {
        Update = "";
        RequestOperationEnum requestOperationEnum = await NetworkComp.ValidateLogin(args.Username, args.Password);

        if (requestOperationEnum ==  RequestOperationEnum.SUCCESS)
        {
            Console.WriteLine("success");

            CustomAuthenticationStateProvider.SetClaimsIdentity(args.Username, args.Password);
            ProfileData.username = args.Username;
            NavigationManager.NavigateTo($"/Profile");
        }
        else if(requestOperationEnum == RequestOperationEnum.WRONGPASSWORD)
        {
            Console.WriteLine("incorrect");
            Update = "Password was incorrect";
            StateHasChanged();
        }
        else if (requestOperationEnum == RequestOperationEnum.ERROR)
        {
            Console.WriteLine("both incorrect");

            Update = "Username and password was incorrect";
            StateHasChanged();
        }
            
    }

    private void OnResetPassword(string args, string loginWithRegisterAndPasswordReset)
    {
        Console.WriteLine("Reset password");
    }

    private void OnRegister(string loginWithRegisterAndPasswordReset)
    {
        Console.WriteLine("loginwithregister");
    }

}