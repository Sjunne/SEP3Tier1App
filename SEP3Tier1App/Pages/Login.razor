@using WebApplication.Data
@using WebApplication.Network
@using SEP3Tier1App.Authentication
@using System.Security.Claims
@using SEP3Tier1App.Network
@inject CustomAuthenticationStateProvider CustomAuthenticationStateProvider;
@inject INetworkComp NetworkComp;
@inject NavigationManager NavigationManager
@inject ProfileData ProfileData
@inject INetworkSocket NetworkSocket;

<div class="centerLogin">
    <RadzenCard>
        <RadzenLogin Login=@(args => OnLogin(args, "")) 
                     ResetPassword=@(args => OnResetPassword(args, ""))
                     Register=@(args => OnRegister("")) Style="margin-bottom: 20px;" />
    </RadzenCard>
</div>

<p>@Update</p>
@code {
    private User User = new User();
    private string Update;

    private async void OnLogin(LoginArgs args, string loginWithRegisterAndPasswordReset)
    {
        try
        {
            Request request = await NetworkComp.ValidateLogin(args.Username, args.Password);
        
            if (request.o.ToString().Equals("Logged in"))
            {
                CustomAuthenticationStateProvider.SetClaimsIdentity(args.Username, args.Password);
                ProfileData.username = args.Username;
                NetworkSocket.setUsername(args.Username);
                NetworkSocket.SendUsername();
                NavigationManager.NavigateTo($"/Profile");
            }
            else
            {
                Update = request.o.ToString() + "";
                StateHasChanged();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            NavigationManager.NavigateTo($"/Error/{e.Message}");
        }
            
    }

    private void OnResetPassword(string args, string loginWithRegisterAndPasswordReset)
    {
        //Find ud om man kan sende en aktiveringslink eller email
    }

    private void OnRegister(string loginWithRegisterAndPasswordReset)
    {
        NavigationManager.NavigateTo($"/Register");
    }

}