@page "/Register"
@using WebApplication.Data
@using WebApplication.Network
@using SEP3Tier1App.Authentication
@inject INetworkComp NetworkImpl
@inject NavigationManager NavigationManager;
@inject CustomAuthenticationStateProvider _CustomAuthenticationStateProvider;
<h1>Create a New Account</h1>
<h2>And Find Your Next Mistake</h2>
<link rel="stylesheet" href="style.css">
<div id="Form" class="form">
    
    <input @bind="username" type="text" class="textbox" placeholder="Enter UserName" id="UserName" required/>
    <input @bind="email" type="Email" class="textbox" placeholder="Enter Email" id="Email" required/>
    <input @bind="password" type="password" class="passwordbox" placeholder="Enter Password" id="Password" required/>
    <input @bind="pwdagain"type="password" class="passwordbox" style="float: right" placeholder="Enter Password Again" id="PasswordAgain" required/>
    <div id="checkboxAbove18div">
        <input @bind="above18"type="checkbox" id="checkboxAbove18" required>
        <label for="checkboxAbove18">I am above 18</label>
    </div>
    <div>
        <input type="submit" class="button" id="submitButton" value="Sign Up" @onclick="RegisterUser">
    </div>
    
    <p>@Update</p>
</div>
@code {
    private string username, email, password, pwdagain;
    private bool above18;
    private string Update;

    private async void RegisterUser()
    {
        if (checkNull())
        {
            Update = "Please fill out all fields. \n";
        }
        else if (username.Equals("") || email.Equals("") || !password.Equals(pwdagain) || !above18)
        {
            //ændre else if condition
            if (username.Equals("") || email.Equals(""))
            {
                Update = "Please fill out all fields.\n";
            }
            if (!password.Equals(pwdagain))
            {
                Update = "Both password fields must match. \n";
            }
            if (!above18)
            {
                Update = "You must be above 18 years old. \n";
            }
        }
        
        else
        {
            User user = new User()
            {
                username =  username,
                password =  password,
                email =  email
            };
            try
            {
                Request request = await NetworkImpl.RegisterUser(user);
                if (request.o.ToString().Equals("Registered"))
                {
                    _CustomAuthenticationStateProvider.SetCachedUser(user);
                    NavigationManager.NavigateTo($"/CreateProfile");
                }
                else
                {
                    Update = request.o.ToString();
                    StateHasChanged();
                }
            }
            catch (Exception e)
            {
                NavigationManager.NavigateTo($"/Error/{e.Message}");
            }

            
        }
    }

    private bool checkNull()
    {
        return username == null || password == null || pwdagain == null || email == null;
    }

}